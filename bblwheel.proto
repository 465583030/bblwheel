syntax = "proto3";

option java_package = "com.hemayun.bblwheel";
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

package bblwheel;

message Void {}
message RegisterResult{
    string Desc = 1;
    repeated Service Service = 2;
    map<string,Config> Configs = 3;
}

message Service {
    string ID = 1;
    string Name = 2;
    repeated string Tags = 3;
    string Address = 4;
    string DataCenter = 5;
    string Node = 6;
    string  PID = 7;
    int32 Weight = 8;
    bool Single = 9;
    repeated string DependentServices = 10;
    repeated string DependentConfigs = 11;
    enum Status {
        INIT = 0;
        ONLINE = 1;
        MAINTENANCE = 2;
        OFFLINE = 3;
        FAULT = 4;
        UNAUTHORIZE = 5;
    }
    Status status = 12;
    Stats Stats  =13;
    string Error = 14;
}

message ConfigEntry {
    string Key = 1;
    string Value = 2;
}

message Config {
    repeated ConfigEntry Items = 1;
}

message UpdateConfigReq {
    string ServiceID = 1;
    string ServiceName = 2;
    Config config = 3;
}

message Stats {
    string ServiceID = 1;
    string ServiceName = 2;
    int64 Count = 3;
    int64 UpTime = 4;
    int64 UsedMem = 5;
    int64 FreeMem = 6;
    int64 Threads = 7;
    int64 AvgRespTime = 8;
    int64 MinRespTime = 9;
    int64 MaxRespTime = 10;
    int64 LastActiveTime = 11;
    map<string, string> Other = 12;
    string Errors = 13;
}

message Event {
    enum EventType {
        DISCOVERY = 0;  //s->c
        CONFIGUPDATE = 1; //s->c
        REGISTER_RESULT = 2; //s->c
        KEEPALIVE = 3; //c->s
        CONTROL = 4; //s->c
        EXEC = 5; //s->c
    }
    EventType Type = 1;
    Service Service = 2;
    ConfigEntry Item = 3;
    string Command = 4; //start,restart,stop
}

message LookupConfigReq {
    repeated string DependentConfigs = 1;
}

message LookupConfigResp {
    map<string,Config> Configs = 1;
}

message LookupServiceReq {
    string ServiceID = 1;
    string ServiceName = 2;
    repeated string DependentServices = 3;
}
message LookupServiceResp {
    repeated Service Services = 1;
}
service BblWheel {
  rpc LookupConfig(LookupConfigReq) returns (LookupConfigResp);
  rpc LookupService(LookupServiceReq) returns (LookupServiceResp);
  rpc UpdateConfig(UpdateConfigReq) returns (Void);
  rpc Register(Service) returns (RegisterResult);
  rpc Unregister(Service) returns (Void);
  rpc Events(stream Event) returns (stream Event);
}
